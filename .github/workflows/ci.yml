name: MSBuild on Windows

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: mouse-click-simulator.sln

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    strategy:
      matrix:
        dotnet:
          - 8.0.x
          - 9.0.x
    runs-on: windows-2022

    steps:
    - name: Code checkout
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Tests
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: dotnet test --logger "console;verbosity=detailed" /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    # Inno Setup 6.3.3 is already installed on the Windows 2022 image. See
    # <https://github.com/actions/runner-images/blob/main/images/windows/Windows2022-Readme.md>
    # for pre-installed software.

    - name: Create installer
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        "C:\Program Files (x86)\Inno Setup 6\iscc.exe" "setup\setup.iss"
        for /f %%i IN ('git describe --always') do set "VERSION=%%i"
        echo Version is %VERSION%.
        move output\mouse-click-simulator_setup.exe output\mouse-click-simulator_setup_%VERSION%.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: installer-dotnet-${{ matrix.dotnet }}
        path: output\*.exe

    - name: Create ZIP file
      working-directory: ${{env.GITHUB_WORKSPACE}}
      shell: cmd
      run: |
        for /f %%i IN ('git describe --always') do set "VERSION=%%i"
        echo Version is %VERSION%.
        md mouse-click-simulator-%VERSION%
        copy mouse-click-simulator\bin\Release\net8.0-windows7.0\mouse-click-simulator.exe mouse-click-simulator-%VERSION%
        copy mouse-click-simulator\bin\Release\net8.0-windows7.0\mouse-click-simulator.dll mouse-click-simulator-%VERSION%
        copy mouse-click-simulator\bin\Release\net8.0-windows7.0\mouse-click-simulator.runtimeconfig.json mouse-click-simulator-%VERSION%
        copy LICENSE mouse-click-simulator-%VERSION%
        md mouse-click-simulator-%VERSION%\documentation
        copy readme.md mouse-click-simulator-%VERSION%\documentation
        copy changelog.md mouse-click-simulator-%VERSION%\documentation
        copy screenshot.png mouse-click-simulator-%VERSION%\documentation
        "C:\Program Files\7-Zip\7z.exe" a -r mouse-click-simulator_%VERSION%.zip mouse-click-simulator-%VERSION%

    - name: Upload zipped updater
      uses: actions/upload-artifact@v4
      with:
        name: mouse-click-simulator-zipped-${{ matrix.dotnet }}
        if-no-files-found: error
        path: mouse-click-simulator*.zip
